# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Int!
  name: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [Product!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Product {
  id: Int!
  name: Int!
  description: String!
  price: Float!
  image: String!
  status: Boolean!
  category: Category!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderDetail {
  orderId: Int!
  productId: Int!
  quantity: Int!
  createAt: DateTime!
  updateAt: DateTime!
}

type Pet {
  id: Int!
  name: String!
  type: String!
  ownerId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Owner {
  id: Int!
  name: String!
  email: String!
  password: String!
  statusAccount: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  pets: [Pet!]!
  orders: [Order!]!
}

type Order {
  id: Int!
  orderDate: DateTime!
}

type Employee {
  id: Int!
  name: String!
  email: String!
  password: String!
  phone: String!
  address: String!
  birthday: DateTime!
  avatar: String!
  statusAccount: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  orders: [Order!]!
}

type AccessTokenResponse {
  accessToken: String!
}

type Query {
  findAllPets: [Pet!]!
  findOnePet(id: Int!): Pet!
  login(email: String!, password: String!): AccessTokenResponse!
  findAllOwners: [Owner!]!
  findOneOwner(id: Int!): Owner!
  pets: [Pet!]!
  order(id: Int!): Order!
  product(id: Int!): Product!
  employee(id: Int!): Employee!
  orderDetail: [OrderDetail!]!
  category(id: Int!): Category!
}

type Mutation {
  createPet(createPetInput: CreatePetInput!): Pet!
  updatePet(updatePetInput: UpdatePetInput!): Pet!
  removePet(id: Int!): Pet!
  createOwner(createOwnerInput: CreateOwnerInput!): AccessTokenResponse!
  updateOwner(updateOwnerInput: UpdateOwnerInput!): Owner!
  removeOwner(id: Int!): Owner!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  removeOrder(id: Int!): Order!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): Employee!
  removeEmployee(id: Int!): Employee!
  createOrderDetail(createOrderDetailInput: CreateOrderDetailInput!): OrderDetail!
  updateOrderDetail(updateOrderDetailInput: UpdateOrderDetailInput!): OrderDetail!
  removeOrderDetail(id: Int!): OrderDetail!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
}

input CreatePetInput {
  name: String!
  type: String!
  ownerId: Int!
}

input UpdatePetInput {
  id: Int!
  name: String!
  type: String!
}

input CreateOwnerInput {
  name: String!
  email: String!
  password: String!
}

input UpdateOwnerInput {
  id: Int!
  name: String!
  email: String!
  password: String!
}

input CreateOrderInput {
  id: Int!
  employeeId: Int!
  customerId: Int!
}

input CreateProductInput {
  name: String!
  price: Float!
  description: String!
}

input UpdateProductInput {
  name: String!
  price: Float!
  description: String!
  id: Int!
}

input CreateEmployeeInput {
  name: String!
  email: String!
  password: String!
}

input UpdateEmployeeInput {
  name: String!
  email: String!
  password: String!
  id: Int!
}

input CreateOrderDetailInput {
  orderId: Int!
  productId: Int!
  quantity: Int!
}

input UpdateOrderDetailInput {
  orderId: Int!
  productId: Int!
  quantity: Int!
  id: Int!
}

input CreateCategoryInput {
  name: String!
  description: String!
}

input UpdateCategoryInput {
  name: String!
  description: String!
  id: Int!
}